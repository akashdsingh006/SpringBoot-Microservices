server.port=8081

#Spring Config
spring.application.name=USER-SERVICE


#Database Config
spring.datasource.name=user
spring.datasource.url=jdbc:postgresql://localhost:5432/microservices
spring.datasource.username=postgres
spring.datasource.password=akash
spring.datasource.driver-class-name=org.postgresql.Driver


#Hibernate Config
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


#EurekaConfig
#eureka.instance.prefer-ip-address=true
#eureka.client.fetch-registry=true
#eureka.client.register-with-eureka=true
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka


#Config using Github
spring.config.import=configserver:http://localhost:8085


#Actuator Config
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always


#Resilience4j Config
resilience4j.circuitbreaker.instances.ratingHotelBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.ratingHotelBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.ratingHotelBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.wait-duration-in-open-state=6s
resilience4j.circuitbreaker.instances.ratingHotelBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.ratingHotelBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.sliding-window-type=count-based


#Retry of Resilience4j config
resilience4j.retry.instances.ratingHotelService.max-attempts=3
resilience4j.retry.instances.ratingHotelService.wait-duration=2s

#Rate Limiter using Resilience Config
resilience4j.ratelimiter.instances.userRateLimiter.limit-refresh-period=4s
resilience4j.ratelimiter.instances.userRateLimiter.timeout-duration=0s
resilience4j.ratelimiter.instances.userRateLimiter.limit-for-period=2

